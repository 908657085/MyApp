apply plugin: 'com.android.application'
apply plugin: 'com.neenbedankt.android-apt'
apply plugin: 'com.fernandocejas.frodo'

import com.android.build.OutputFile


android {
    def globalConfiguration = rootProject.extensions.getByName("ext")

    compileSdkVersion globalConfiguration.getAt("androidCompileSdkVersion")
    buildToolsVersion globalConfiguration.getAt("androidBuildToolsVersion")



    defaultConfig {
        minSdkVersion globalConfiguration.getAt("androidMinSdkVersion")
        targetSdkVersion globalConfiguration.getAt("androidTargetSdkVersion")

        applicationId globalConfiguration.getAt("androidApplicationId")
        versionCode globalConfiguration.getAt("androidVersionCode")
        versionName globalConfiguration.getAt("androidVersionName")
        testInstrumentationRunner globalConfiguration.getAt("testInstrumentationRunner")
        testApplicationId globalConfiguration.getAt("testApplicationId")
        ndk {
            abiFilters "armeabi-v7a", "x86","x86_64"
        }
    }



    signingConfigs {
        debug {
            storeFile file('../buildsystem/debug.jks')
            storePassword '1234567890'
            keyAlias 'AndroidDebug'
            keyPassword '1234567890'
        }
    }

    buildTypes {
        debug {
            signingConfig signingConfigs.debug
        }
    }


    configurations.all {
        resolutionStrategy.force 'com.google.code.findbugs:jsr305:3.0.0'
    }
}

dependencies {
    def appDependencies = rootProject.ext.appDependencies
    def testDependencies = rootProject.ext.appTestDependencies
    def developmentDependencies = rootProject.ext.developmentDependencies
    compile project(':data')
    compile project(':domain')
    compile project(':widgets')
    compile project(':lib-share');
    compile fileTree(include: ['*.jar'], dir: 'libs')
    apt appDependencies.daggerCompiler
    apt appDependencies.butterKnifeCompiler
    compile appDependencies.dagger
    compile appDependencies.butterKnife
    compile appDependencies.rxJava
    compile appDependencies.rxAndroid
    compile appDependencies.gson
    compile appDependencies.okHttp
    compile appDependencies.okHttp_log
    compile appDependencies.retrofit
    compile appDependencies.retrofit_converter_json
    compile appDependencies.retrofit_adapter_rxjava
    compile appDependencies.glide
    compile appDependencies.greendao
    compile appDependencies.support_v4
    compile appDependencies.appcompat_v7
    compile appDependencies.recyclerView
    compile appDependencies.design
    compile appDependencies.cardView
    provided appDependencies.javaxAnnotation
    compile 'com.facebook.react:react-native:+'
    //Development
    compile developmentDependencies.leakCanary
    testCompile testDependencies.junit
    androidTestCompile testDependencies.junit
    androidTestCompile testDependencies.mockito
    androidTestCompile testDependencies.dexmaker
    androidTestCompile testDependencies.dexmakerMockito
    androidTestCompile testDependencies.espresso
    androidTestCompile testDependencies.testingSupportLib
    androidTestCompile testDependencies.assertj
}

// Run this once to be able to run the application with BUCK
// puts all compile dependencies into folder libs for BUCK to use
task copyDownloadableDepsToLibs(type: Copy) {
    from configurations.compile
    into 'libs'
}
