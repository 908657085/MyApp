apply plugin: 'com.android.application'
apply plugin: 'com.fernandocejas.frodo'

android {
    def globalConfiguration = rootProject.extensions.getByName("ext")

    compileSdkVersion globalConfiguration.getAt("androidCompileSdkVersion")

    defaultConfig {
        minSdkVersion globalConfiguration.getAt("androidMinSdkVersion")
        targetSdkVersion globalConfiguration.getAt("androidTargetSdkVersion")

        applicationId globalConfiguration.getAt("androidApplicationId")
        versionCode globalConfiguration.getAt("androidVersionCode")
        versionName globalConfiguration.getAt("androidVersionName")
        testApplicationId globalConfiguration.getAt("testApplicationId")
        multiDexEnabled true
        ndk {
            abiFilters "armeabi-v7a", "x86", "x86_64"
        }
    }



    signingConfigs {
        debug {
            storeFile file('../buildsystem/debug.jks')
            storePassword '1234567890'
            keyAlias 'AndroidDebug'
            keyPassword '1234567890'
        }
    }

    buildTypes {
        debug {
            signingConfig signingConfigs.debug
        }

        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    configurations.all {
        resolutionStrategy.force 'com.google.code.findbugs:jsr305:3.0.0'
        // OkHttp 3.5.0+ includes the websockets API, so we need this to prevent a conflict
        exclude module: 'okhttp-ws'
    }

    lintOptions {
        abortOnError false
    }

    sourceSets {
        main {
            jniLibs.srcDir 'libs'
            jni.srcDirs = [] //disable automatic ndk-build call
        }
    }
}

dependencies {
    def appDependencies = rootProject.ext.appDependencies
    def testDependencies = rootProject.ext.appTestDependencies
    def developmentDependencies = rootProject.ext.developmentDependencies
    implementation project(':data')
    implementation project(':domain')
    implementation project(':widgets')
    implementation project(':lib-share')
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    annotationProcessor appDependencies.daggerCompiler
    annotationProcessor appDependencies.butterKnifeCompiler
    implementation 'com.android.support:multidex:1.0.0'
    implementation appDependencies.dagger
    implementation appDependencies.butterKnife
    implementation appDependencies.rxJava
    implementation appDependencies.rxAndroid
    implementation appDependencies.gson
    implementation appDependencies.okHttp_log
    implementation appDependencies.retrofit
    implementation appDependencies.retrofit_converter_json
    implementation appDependencies.retrofit_adapter_rxjava
    implementation appDependencies.glide
    implementation appDependencies.greendao
    implementation appDependencies.support_v4
    implementation appDependencies.appcompat_v7
    implementation appDependencies.recyclerView
    implementation appDependencies.design
    implementation appDependencies.cardView
    implementation appDependencies.palette_v7
    compileOnly appDependencies.javaxAnnotation
    implementation 'com.facebook.react:react-native:+'
    //Development
    implementation developmentDependencies.leakCanary
}

// Run this once to be able to run the application with BUCK
// puts all compile dependencies into folder libs for BUCK to use
task copyDownloadableDepsToLibs(type: Copy) {
    from configurations.compile
    into 'libs'
}
