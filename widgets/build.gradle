apply plugin: 'com.android.library'
apply plugin: 'com.fernandocejas.frodo'

android {
    def globalConfiguration = rootProject.extensions.getByName("ext")

    compileSdkVersion globalConfiguration.getAt("androidCompileSdkVersion")
    buildToolsVersion globalConfiguration.getAt("androidBuildToolsVersion")

    defaultConfig {
        minSdkVersion globalConfiguration.getAt("androidMinSdkVersion")
        targetSdkVersion globalConfiguration.getAt("androidTargetSdkVersion")
        versionCode globalConfiguration.getAt("androidVersionCode")
    }

    lintOptions {
        quiet true
        abortOnError false
        ignoreWarnings true
        disable 'InvalidPackage'  // Some libraries have issues with this
        disable 'OldTargetApi'
        // Due to Robolectric that modifies the manifest when running tests
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    buildToolsVersion '25.0.0'
}

dependencies {

    implementation fileTree(dir: 'libs', include: ['*.jar'])

    def appDependencies = rootProject.ext.appDependencies
    def testDependencies = rootProject.ext.dataTestDependencies

    implementation project(":data")

    annotationProcessor appDependencies.daggerCompiler
    implementation appDependencies.dagger
    implementation appDependencies.rxJava
    implementation appDependencies.rxAndroid
    implementation appDependencies.gson
    implementation appDependencies.okHttp
    implementation appDependencies.okHttp_log
    implementation appDependencies.retrofit
    implementation appDependencies.retrofit_converter_json
    implementation appDependencies.retrofit_adapter_rxjava
    implementation appDependencies.greendao
    implementation appDependencies.recyclerView
    compileOnly appDependencies.javaxAnnotation
}
